// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'status.dart';

class CommitInfo {
  final String hash;
  final String shortHash;
  final String message;
  final String author;
  final String email;
  final PlatformInt64 timestamp;

  const CommitInfo({
    required this.hash,
    required this.shortHash,
    required this.message,
    required this.author,
    required this.email,
    required this.timestamp,
  });

  @override
  int get hashCode =>
      hash.hashCode ^
      shortHash.hashCode ^
      message.hashCode ^
      author.hashCode ^
      email.hashCode ^
      timestamp.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CommitInfo &&
          runtimeType == other.runtimeType &&
          hash == other.hash &&
          shortHash == other.shortHash &&
          message == other.message &&
          author == other.author &&
          email == other.email &&
          timestamp == other.timestamp;
}

class RepositoryInfo {
  final String path;
  final String name;
  final String? currentBranch;
  final bool isDirty;
  final int uncommittedChanges;
  final int untrackedFiles;
  final int unpushedCommits;
  final int ahead;
  final int behind;
  final CommitInfo? lastCommit;
  final List<FileStatus> files;

  const RepositoryInfo({
    required this.path,
    required this.name,
    this.currentBranch,
    required this.isDirty,
    required this.uncommittedChanges,
    required this.untrackedFiles,
    required this.unpushedCommits,
    required this.ahead,
    required this.behind,
    this.lastCommit,
    required this.files,
  });

  @override
  int get hashCode =>
      path.hashCode ^
      name.hashCode ^
      currentBranch.hashCode ^
      isDirty.hashCode ^
      uncommittedChanges.hashCode ^
      untrackedFiles.hashCode ^
      unpushedCommits.hashCode ^
      ahead.hashCode ^
      behind.hashCode ^
      lastCommit.hashCode ^
      files.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RepositoryInfo &&
          runtimeType == other.runtimeType &&
          path == other.path &&
          name == other.name &&
          currentBranch == other.currentBranch &&
          isDirty == other.isDirty &&
          uncommittedChanges == other.uncommittedChanges &&
          untrackedFiles == other.untrackedFiles &&
          unpushedCommits == other.unpushedCommits &&
          ahead == other.ahead &&
          behind == other.behind &&
          lastCommit == other.lastCommit &&
          files == other.files;
}
